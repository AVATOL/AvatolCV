function avatol_cv

    clearvars();
    
    clearvars -global H;
    global H;
    %H.questionnaireXML = 'tests/simple.xml';
    if ispc
        H.questionnaireXML = 'data\\questionnaire\\Questionnaire.xml';
    else
        H.questionnaireXML = 'data/questionnaire/Questionnaire.xml';
    end
    
    questionsXmlFile = QuestionsXMLFile(H.questionnaireXML);
    qquestions = QQuestions(questionsXmlFile.domNode);
    H.questionSequencer = QuestionSequencer(qquestions);
    qv = QuestionsValidator();
    qv.validate(H.questionSequencer.qquestions.questions);
    
    %H.tutorialXML = 'tests/simpleTutorial.xml';
    if ispc
        H.tutorialXML = 'data\\tutorial\\Tutorial.xml';
    else
        H.tutorialXML = 'data/tutorial/Tutorial.xml';
    end
    
    tutorialXmlFile = QuestionsXMLFile(H.tutorialXML);
    infoPages = InfoPages(tutorialXmlFile.domNode);
    H.infoPageSequencer = InfoPageSequencer(infoPages);
    ipv = InfoPagesValidator();
    ipv.validate(H.infoPageSequencer.info_pages.info_pages);
    
    
    H.activeControlTags = {};
    H.activePanelTags = {};
    
    H.mostRecentTutorialPage = 'NOT_STARTED';
    H.mostRecentQuestionnairePage = 'NOT_STARTED';
    
    layout();
    displayWelcomeScreen();
    
    %
    %  LAYOUT helper functions
    %
    
    function layout()
        
        H.lineHeight = 30;
        H.pushButtonWidth = 80;
        H.fontname = 'Helvetica';
        %H.fontname = 'Calibri';
        %H.fontname = 'Times New Roman';
        H.fontsize = 13;
        %H.fontsize = 14;
        H.fontsizeHeader = 16;
        H.fullWidth = 900;
        H.fullHeight = 600;
        H.figurePosition =  [150 150 H.fullWidth H.fullHeight];
        H.fig = figure('position', H.figurePosition ,... 
                'MenuBar', 'none' ,...
                'Name', 'AVATOL Computer Vision System',...
                'Color', [1 1 1]);
    end

    function deleteObsoleteControls()
        deleteControls(H.activeControlTags);
        H.activeControlTags = {};
        deleteControls(H.activePanelTags);
        H.activePanelTags = {};
    end

    function deleteControls(controlTags)
        handles = guihandles();
        if (not(isempty(handles)))
            for i=1:length(controlTags)
                tag = controlTags{i};
                %control = findobj('Tag',tag);
                control = getfield(handles, tag);
                delete(control);
            end
        end
    end

    function createTypedInputQAPanels()
        H.titlePanel = createTitlePanel();
                              
        H.questionPanel = uipanel('Background', [1 1 1],...%[1 0.3 0.3]
                                  'BorderType', 'none',...
                                  'Tag','questionPanel',...
                                  'Position',[0.05 0.70 0.67 0.18]);
                              
        H.answerPanel = uipanel('Background', [1 1 1],...%[0.3 1 0.3]
                                  'BorderType', 'none',...
                                  'Tag','answerPanel',...
                                  'Position',[0.74 0.70 0.21 0.18]);
                              
        H.imagePanel = uipanel('Background',[1 1 1],...%[0.3 0.3 1]
                                  'BorderType', 'none',...
                                  'Tag','imagePanel',...
                                  'Position',[ 0.02 0.1 0.96 0.60]);
                              
        H.navigationPanel = uipanel('Background', [1 1 1],...%[0.1 0.3 0.3]
                                  'BorderType', 'none',...
                                  'Tag','navigationPanel',...
                                  'Position',getNavigationPanelPosition());
                              
        H.mostRecentQAFlavor = 'typedInput';
        H.activePanelTags = { 'titlePanel', 'questionPanel', 'answerPanel', 'imagePanel', 'navigationPanel' };
    end

    function titlePanel = createTitlePanel()
        titlePanel = uipanel('Background', [1 1 1],...%[1 0.5 0.5]
                                  'BorderType', 'none',... %etchedin
                                  'Tag','titlePanel',...
                                  'Position',[0.02 0.89 .96 0.07]);
        
    end

    function createChoiceQAPanels()
        H.titlePanel = createTitlePanel();
                              
        H.questionPanel = uipanel('Background', [1 1 1],...%[1 0.3 0.3]
                                  'BorderType', 'none',...
                                  'Tag', 'questionPanel',...
                                  'Position',[0.05 0.70 0.67 0.18]);
                              
        H.answerPanel = uipanel('Background', [1 1 1],...%[0.3 1 0.3]
                                  'BorderType', 'none',...
                                  'Tag', 'answerPanel',...
                                  'Position',[0.74 0.1 0.21 0.77]);
                              
        H.imagePanel = uipanel('Background',[1 1 1],...%[0.3 0.3 1]
                                  'BorderType', 'none',...
                                  'Tag', 'imagePanel',...
                                  'Position',[ 0.02 0.1 0.7 0.60]);
                              
        H.navigationPanel = uipanel('Background', [1 1 1],...%[0.1 0.3 0.3]
                                  'BorderType', 'none',...
                                  'Tag', 'navigationPanel',...
                                  'Position',getNavigationPanelPosition());
        H.mostRecentQAFlavor = 'choice';
        H.activePanelTags = {  'titlePanel', 'questionPanel', 'answerPanel', 'imagePanel', 'navigationPanel'}; 
    end


    function createSimpleTextScreenPanels()
        
        H.textPanel = uipanel('Background', [1 1 1],...%[1 0.3 0.3]
                                  'BorderType', 'none',...
                                  'Tag', 'textPanel',...
                                  'Position',[0.2 0.3 0.6 0.4]);
                             
      
        H.navigationPanel = uipanel('Background', [1 1 1],...%[0.1 0.3 0.3]
                                  'BorderType', 'none',...
                                  'Tag', 'navigationPanel',...
                                  'Position',getNavigationPanelPosition());
        %H.mostRecentQAFlavor = 'na';
        H.activePanelTags = { 'textPanel', 'navigationPanel'};
    end

    function createTutorialPanels()
        H.titlePanel = createTitlePanel();
                              
        H.textPanel = uipanel('Background', [1 1 1],...%[1 0.3 0.3]
                                  'BorderType', 'none',...
                                  'Tag', 'textPanel',...
                                  'Position',[0.05 0.70 0.9 0.18]);
                             
        H.imagePanel = uipanel('Background',[1 1 1],...%[0.3 0.3 1]
                                  'BorderType', 'none',...
                                  'Tag', 'imagePanel',...
                                  'Position',[ 0.15 0.2 0.7 0.60]);
                              
        H.navigationPanel = uipanel('Background', [1 1 1],...%[0.1 0.3 0.3]
                                  'BorderType', 'none',...
                                  'Tag', 'navigationPanel',...
                                  'Position',getNavigationPanelPosition());
        %H.mostRecentQAFlavor = 'na';
        H.activePanelTags = { 'titlePanel', 'textPanel', 'imagePanel', 'navigationPanel'}; 
    end

     %
     % Positions
     %

    function position = getNavigationPanelPosition()
        position = [0.02 0.02 0.96 0.05];
    end


    function answerPosition = getInputAnswerPosition()
        answerPosition = [ 0,0.7,1, 0.3 ];
    end

    function answerPosition = getChoiceAnswerPosition(answerIndex)
        
        answerPanelPosition = getpixelposition(H.answerPanel,1);
        answerPanelWidth = answerPanelPosition(3);
        answerPanelHeight = answerPanelPosition(4);
        
        answerPositionY = answerPanelHeight -H.lineHeight - (answerIndex*H.lineHeight);
        answerPosition = [ 0 answerPositionY answerPanelWidth H.lineHeight];
    end

    function navButtonPosition = getButtonPositionRightA()
        navButtonPosition = [0.8,0,0.1,1 ];
    end

    
    function navButtonPosition = getButtonPositionRightB()
        navButtonPosition = [0.9,0,0.1,1 ];
    end

    function navButtonPosition = getButtonPositionLeft()
        navButtonPosition = [0,0,0.3,1 ];
    end

  
    %
    %  UI panel populators
    %
    
    function control = getCharacterNameTitle(titleString)
        control = uicontrol('style', 'text' ,...
                                     'String', titleString ,...
                                     'Units','normalized',...
                                     'position', [0,0,1,1] ,...
                                     'FontName', H.fontname ,...
                                     'FontSize', H.fontsizeHeader ,...
                                     'BackgroundColor', [1 1 1] ,...
                                     'Tag','titleText' ,...
                                     'Parent',H.titlePanel,...
                                     'HorizontalAlignment', 'center');
      
    end

    function displayQuestionnaireCompleteScreen() 
        deleteObsoleteControls();
        message = 'You have finished answering questions for this character.  Click "More" to do another character or "Exit" if you are finished.';
        
        H.messagePanel = uipanel('Background', [1 1 1],...%[1 0.3 0.3]
                                  'BorderType', 'none',...
                                  'Tag','messagePanel',...
                                  'Position',[0.2 0.4 0.6 0.2]);
        
        
        H.messageText = uicontrol('style', 'text' ,...
                                     'Parent',H.messagePanel,...
                                     'Units', 'normalized',...
                                     'position', [0 0 1 1] ,...
                                     'FontName', H.fontname ,...
                                     'FontSize', H.fontsize ,...
                                     'Tag','messageText' ,...
                                     'Background',[1 1 1],...
                                     'String', message,...
                                     'HorizontalAlignment', 'left');%'BackgroundColor', [1 0.1 0.1] ,...
                                 
        H.navigationPanel = uipanel('Background', [1 1 1],...%[0.1 0.3 0.3]
                                     'BorderType', 'none',...
                                     'Units', 'normalized',...
                                     'Tag','navigationPanel' ,...
                                     'Position',getNavigationPanelPosition());
                              
        H.doAnotherCharacter = uicontrol('style', 'pushbutton' ,...
                                     'String', 'Do another character' ,...
                                     'Parent',H.navigationPanel,...
                                     'Units', 'normalized',...
                                     'position', getButtonPositionLeft() ,...
                                     'FontName', H.fontname ,...
                                     'FontSize', H.fontsize ,...
                                     'Tag','doAnotherCharacter' ,...
                                     'BackgroundColor', [0.5 0.5 0.5]);  
        
                                
        H.done = uicontrol('style', 'pushbutton' ,...
                                     'String', 'Exit' ,...
                                     'Parent',H.navigationPanel,...
                                     'Units', 'normalized',...
                                     'position', getButtonPositionRightB() ,...
                                     'FontName', H.fontname ,...
                                     'FontSize', H.fontsize ,...
                                     'Tag','done' ,...
                                     'BackgroundColor', [0.5 0.5 0.5]);  
         
        H.prev = uicontrol('style', 'pushbutton' ,...
                                     'String', 'Prev' ,...
                                     'Parent',H.navigationPanel,...
                                     'Units', 'normalized',...
                                     'position', getButtonPositionRightA() ,...
                                     'FontName', H.fontname ,...
                                     'FontSize', H.fontsize ,...
                                     'Tag','prev' ,...
                                     'BackgroundColor', [0.5 0.5 0.5]);  
                                 
        H.activePanelTags = { 'messagePanel', 'navigationPanel' };
        H.activeControlTags = { 'messageText', 'doAnotherCharacter', 'done', 'prev'};    
        
        set(H.doAnotherCharacter, 'callback', {@doAnotherCharacter});
        set(H.done, 'callback', {@saveAndExit});
        set(H.prev, 'callback', {@backFromEndMessageScreen});
        H.mostRecentQuestionnairePage = 'QUESTIONNAIRE_COMPLETE'; 
    end

    function displayWelcomeScreen()
        deleteObsoleteControls();
        createSimpleTextScreenPanels();
        introText = ['Welcome to the AVATOL Computer Vision System.  '...
                     'Click the buttons below to either begin the tutorial, or skip to the questionnaire'];
        
        H.tutorialText = uicontrol('style', 'text' ,...
                                     'String', introText ,...
                                     'Units','normalized',...
                                     'position', [0,0,1,1] ,...
                                     'FontName', H.fontname ,...
                                     'FontSize', H.fontsize ,...
                                     'BackgroundColor', [1 1 1] ,...
                                     'Tag','tutorialText' ,...
                                     'Parent',H.textPanel,...
                                     'HorizontalAlignment', 'left');
                                 
        beginTutorialPosition = [0.75,0,0.25,1 ];  
        skipToQuestionnaireButtonPosition = [0,0,0.25,1 ];
        
        H.beginTutorial = uicontrol('style', 'pushbutton' ,...
                                     'String', 'Begin Tutorial' ,...
                                     'Parent',H.navigationPanel,...
                                     'Units','normalized',...
                                     'position', beginTutorialPosition,...
                                     'FontName', H.fontname ,...
                                     'FontSize', H.fontsize ,...
                                     'Tag','beginTutorial' ,...
                                     'BackgroundColor', [0.5 0.5 0.5]);  
        
                         
        H.skipToQuestionnaire = uicontrol('style', 'pushbutton' ,...
                                     'String', 'Skip to Questionnaire' ,...
                                     'Parent',H.navigationPanel,...
                                     'Units','normalized',...
                                     'position', skipToQuestionnaireButtonPosition ,...
                                     'FontName', H.fontname ,...
                                     'FontSize', H.fontsize ,...
                                     'Tag','skipToQuestionnaire' ,...
                                     'BackgroundColor', [0.5 0.5 0.5]);  
                                 
        H.activeControlTags = { 'tutorialText', 'beginTutorial', 'skipToQuestionnaire' };   
        
        H.activeScreen = 'WelcomeScreen';
        set(H.beginTutorial, 'callback', {@showTutorialGoalPage});
        set(H.skipToQuestionnaire, 'callback', {@jumpToQuestionnaire});
 
    end

    function displayTutorialGoalPage()
        deleteObsoleteControls();
        createSimpleTextScreenPanels();
        lineA = 'The goals of this tutorial are to:';
        lineA1 = '';
        lineA2 = '';
        lineB = '    1) Map biological terminology into computer vision terminology';
        lineC = '';
        lineD = '        - What is a biological character in computer vision terms?';
        lineE = '';
        lineF = '        - What is a character score in computer vision terms?';
        lineG = '';
        lineH = '';
        lineI = '    2) Explain general concepts about images and computer vision';
        goalText = { lineA lineA1 lineA2 lineB lineC lineD lineE lineF lineG lineH lineI };
        
        H.tutorialText = uicontrol('style', 'text' ,...
                                     'String', goalText ,...
                                     'Units','normalized',...
                                     'position', [0,0,1,1] ,...
                                     'FontName', H.fontname ,...
                                     'FontSize', H.fontsize ,...
                                     'BackgroundColor', [1 1 1] ,...
                                     'Tag','tutorialText' ,...
                                     'Parent',H.textPanel,...
                                     'HorizontalAlignment', 'left');
                                 
        skipToQuestionnaireButtonPosition = [0,0,0.25,1 ];
        H.skipToQuestionnaire = uicontrol('style', 'pushbutton' ,...
                                     'String', 'Skip to Questionnaire' ,...
                                     'Parent',H.navigationPanel,...
                                     'Units','normalized',...
                                     'position', skipToQuestionnaireButtonPosition ,...
                                     'FontName', H.fontname ,...
                                     'FontSize', H.fontsize ,...
                                     'Tag','skipToQuestionnaire' ,...
                                     'BackgroundColor', [0.5 0.5 0.5]);  
                                 
         H.next = uicontrol('style', 'pushbutton' ,...
                                     'String', 'Next' ,...
                                     'Units','normalized',...
                                     'position', getButtonPositionRightB() ,...
                                     'FontName', H.fontname ,...
                                     'FontSize', H.fontsize ,...
                                     'Tag','next' ,...
                                     'parent',H.navigationPanel,...
                                     'BackgroundColor', [0.5 0.5 0.5]);  
                         
         H.prev = uicontrol('style', 'pushbutton' ,...
                                     'String', 'Back' ,...
                                     'Units','normalized',...
                                     'position', getButtonPositionRightA() ,...
                                     'FontName', H.fontname ,...
                                     'FontSize', H.fontsize ,...
                                     'Parent',H.navigationPanel,...
                                     'Tag','prev' ,...
                                     'BackgroundColor', [0.5 0.5 0.5]);  
                                 
        H.activeControlTags = { 'tutorialText', 'next', 'prev', 'skipToQuestionnaire'};  
        H.activeScreen = 'TUTORIAL_GOAL';
        set(H.next, 'callback', {@showCurrentTutorialPage});
        set(H.prev, 'callback', {@showWelcomeScreen});
        set(H.skipToQuestionnaire, 'callback', {@jumpToQuestionnaire});
        H.mostRecentTutorialPage = 'TUTORIAL_GOAL';
    end
    function displayFinishedTutorialScreen() 
        deleteObsoleteControls();
        createSimpleTextScreenPanels();
        summaryText = ['You have completed the tutorial.  '...
                     'You may either begin the questionnaire or exit the application.'];
        
        H.summaryText = uicontrol('style', 'text' ,...
                                     'String', summaryText ,...
                                     'Units','normalized',...
                                     'position', [0,0,1,1] ,...
                                     'FontName', H.fontname ,...
                                     'FontSize', H.fontsize ,...
                                     'BackgroundColor', [1 1 1] ,...
                                     'Tag','summaryText' ,...
                                     'Parent',H.textPanel,...
                                     'HorizontalAlignment', 'left');
        
        skipToQuestionnaireButtonPosition = [0,0,0.25,1 ];  
        prevButtonPosition =                [0.6,0,0.15,1];                       
        beginQuestionnaireButtonPosition =  [0.75,0,0.25,1 ];
        H.beginQuestionnaire = uicontrol('style', 'pushbutton' ,...
                                     'String', 'Begin Questionnaire' ,...
                                     'Parent',H.navigationPanel,...
                                     'Units','normalized',...
                                     'position', beginQuestionnaireButtonPosition,...
                                     'FontName', H.fontname ,...
                                     'FontSize', H.fontsize ,...
                                     'Tag','beginQuestionnaire' ,...
                                     'BackgroundColor', [0.5 0.5 0.5]);  
        
         H.prev = uicontrol('style', 'pushbutton' ,...
                                     'String', 'Prev' ,...
                                     'Units','normalized',...
                                     'position', prevButtonPosition ,...
                                     'FontName', H.fontname ,...
                                     'FontSize', H.fontsize ,...
                                     'Parent',H.navigationPanel,...
                                     'Tag','prev' ,...
                                     'BackgroundColor', [0.5 0.5 0.5]);                   
        H.exit = uicontrol('style', 'pushbutton' ,...
                                     'String', 'Exit' ,...
                                     'Parent',H.navigationPanel,...
                                     'Units','normalized',...
                                     'position', skipToQuestionnaireButtonPosition ,...
                                     'FontName', H.fontname ,...
                                     'FontSize', H.fontsize ,...
                                     'Tag','exit' ,...
                                     'BackgroundColor', [0.5 0.5 0.5]);  
                                 
        H.activeControlTags = { 'summaryText', 'beginQuestionnaire', 'exit', 'prev' };   
        
        H.activeScreen = 'SummaryScreen';
        set(H.beginQuestionnaire, 'callback', {@displayCharacterQuestion});
        set(H.exit, 'callback', {@exit});
        set(H.prev, 'callback', {@showPrevTutorialPage});
        H.mostRecentTutorialPage = 'TUTORIAL_COMPLETE';
    end

    function displayTutorialPage(infoPage)
        deleteObsoleteControls();
        createTutorialPanels();
        
        titleString = sprintf('Tutorial');
        H.characterNameText = getCharacterNameTitle(titleString);
        
        H.tutorialText = uicontrol('style', 'text' ,...
                                     'String', infoPage.text ,...
                                     'Units','normalized',...
                                     'position', [0,0,1,1] ,...
                                     'FontName', H.fontname ,...
                                     'FontSize', H.fontsize ,...
                                     'BackgroundColor', [1 1 1] ,...
                                     'Tag','tutorialText' ,...
                                     'Parent',H.textPanel,...
                                     'HorizontalAlignment', 'left');
        skipToQuestionnaireButtonPosition = [0,0,0.25,1 ];
        H.skipToQuestionnaire = uicontrol('style', 'pushbutton' ,...
                                     'String', 'Skip to Questionnaire' ,...
                                     'Parent',H.navigationPanel,...
                                     'Units','normalized',...
                                     'position', skipToQuestionnaireButtonPosition ,...
                                     'FontName', H.fontname ,...
                                     'FontSize', H.fontsize ,...
                                     'Tag','skipToQuestionnaire' ,...
                                     'BackgroundColor', [0.5 0.5 0.5]);  
                                 
         H.next = uicontrol('style', 'pushbutton' ,...
                                     'String', 'Next' ,...
                                     'Units','normalized',...
                                     'position', getButtonPositionRightB() ,...
                                     'FontName', H.fontname ,...
                                     'FontSize', H.fontsize ,...
                                     'Tag','next' ,...
                                     'parent',H.navigationPanel,...
                                     'BackgroundColor', [0.5 0.5 0.5]);  
                         
         H.prev = uicontrol('style', 'pushbutton' ,...
                                     'String', 'Back' ,...
                                     'Units','normalized',...
                                     'position', getButtonPositionRightA() ,...
                                     'FontName', H.fontname ,...
                                     'FontSize', H.fontsize ,...
                                     'Parent',H.navigationPanel,...
                                     'Tag','prev' ,...
                                     'BackgroundColor', [0.5 0.5 0.5]);  
                                 
        H.activeControlTags = { 'tutorialText', 'next', 'prev', 'skipToQuestionnaire'};  
        H.activeScreen = 'TutorialPage';
        set(H.next, 'callback', {@showNextTutorialPage});
        set(H.prev, 'callback', {@showPrevTutorialPage});
        set(H.skipToQuestionnaire, 'callback', {@jumpToQuestionnaire});
        if (not(isempty(infoPage.images)))
            displayImages(infoPage.images);
        end
        H.mostRecentTutorialPage = infoPage.id;
    end

    function displayCharacterQuestion(hObject, eventData)
        deleteObsoleteControls();
        createTypedInputQAPanels();
        H.characterNameInputText = uicontrol('style', 'edit' ,...
                                     'Parent',H.answerPanel,...
                                     'Units','normalized',...
                                     'position', getInputAnswerPosition() ,...
                                     'FontName', H.fontname ,...
                                     'FontSize', H.fontsize ,...
                                     'Tag','characterNameInputText' ,...
                                     'Background',[1 1 1],...
                                     'HorizontalAlignment', 'left');%'BackgroundColor', [1 0.1 0.1] ,...
                     
        H.characterNamePrompt = uicontrol('style', 'text' ,...
                                     'Parent',H.questionPanel,...
                                     'Units','normalized',...
                                     'String', 'What is the name of the character?' ,...
                                     'position', [0,0,1,1] ,...
                                     'FontName', H.fontname ,...
                                     'FontSize', H.fontsize ,...
                                     'Tag','characterNamePrompt' ,...
                                     'Background',[1 1 1],...
                                     'HorizontalAlignment', 'left');%'BackgroundColor', [0.1 1 0.1] ,...
 
        H.tutorial = uicontrol('style', 'pushbutton' ,...
                                     'String', 'Tutorial' ,...
                                     'Parent',H.navigationPanel,...
                                     'Units','normalized',...
                                     'position', [0,0,0.15,1],...
                                     'FontName', H.fontname ,...
                                     'FontSize', H.fontsize ,...
                                     'Tag','tutorial' ,...
                                     'BackgroundColor', [0.5 0.5 0.5]);  
                                 
        H.next = uicontrol('style', 'pushbutton' ,...
                                     'Parent',H.navigationPanel,...
                                     'Units','normalized',...
                                     'String', 'Next' ,...
                                     'position', getButtonPositionRightB() ,...
                                     'FontName', H.fontname ,...
                                     'FontSize', H.fontsize ,...
                                     'Tag','next' ,...
                                     'BackgroundColor', [0.5 0.5 0.5]);  
        H.activeControlTags = {'characterNameInputText',  'characterNamePrompt',  'next', 'tutorial' };
        
        H.activeAnswerControl = H.characterNameInputText;
        H.activeQuestionId = 'characterQuestion';
        H.activeControlType = 'edit';
        
        set(H.next, 'callback', {@showNextQuestion});
        set(H.tutorial, 'callback', {@jumpToTutorial});
        H.mostRecentQuestionnairePage = 'CHARACTER_QUESTION'; 
    end

    function displayChoiceQuestion(qquestion)
        % Create the button group.
        deleteObsoleteControls();
        createChoiceQAPanels();
        
        titleString = sprintf('Character :  %s',H.characterName);
        H.characterNameText = getCharacterNameTitle(titleString);
        
        H.buttonGroup = uibuttongroup('Visible','off',...
                                    'Tag','buttonGroup',...
                                    'BorderType','none',...
                                    'Background','white',...
                                    'Parent',H.answerPanel,...
                                    'Position',[0 0 1 1]);
                                
        
        H.activeControlTags = { 'buttonGroup', 'titleText' };    
       
        H.questionText = uicontrol('style', 'text' ,...
                                     'String', qquestion.text ,...
                                     'Units','normalized',...
                                     'position', [0,0,1,1] ,...
                                     'FontName', H.fontname ,...
                                     'FontSize', H.fontsize ,...
                                     'BackgroundColor', [1 1 1] ,...
                                     'Tag','questionText' ,...
                                     'Parent',H.questionPanel,...
                                     'HorizontalAlignment', 'left');
        H.activeControlTags = [ H.activeControlTags,  'questionText' ];   
        
        % Create radio buttons in the button group.       
                        
        for i=1:length(qquestion.answers)
            answerValue = qquestion.answers(i).value;
            tag = sprintf('radioButton%s',answerValue);
            thisButton = uicontrol('Style','radiobutton',...
                            'visible', 'on',...
                            'String',answerValue ,...
                            'Background', 'white' ,...
                            'Position',getChoiceAnswerPosition(i-1),...
                            'parent',H.buttonGroup,...
                            'FontName', H.fontname ,...
                            'FontSize', H.fontsize ,...
                            'Tag', tag,...
                            'HandleVisibility', 'off');
            % buttons not found for deletion, presumably because Button
            % group gets deleted forst, so, don't bother to remember here
            % for later deletion.
            %H.activeControlTags = [ H.activeControlTags, tag ]; 
        end

       
        set(H.buttonGroup,'SelectedObject',[]);  % No selection
        set(H.buttonGroup,'Visible','on');

        H.tutorial = uicontrol('style', 'pushbutton' ,...
                                     'String', 'Tutorial' ,...
                                     'Parent',H.navigationPanel,...
                                     'Units','normalized',...
                                     'position', [0,0,0.15,1],...
                                     'FontName', H.fontname ,...
                                     'FontSize', H.fontsize ,...
                                     'Tag','tutorial' ,...
                                     'BackgroundColor', [0.5 0.5 0.5]);  
        H.activeControlTags = [ H.activeControlTags, 'tutorial' ];                              
        H.next = uicontrol('style', 'pushbutton' ,...
                                     'String', 'Next' ,...
                                     'Units','normalized',...
                                     'position', getButtonPositionRightB() ,...
                                     'FontName', H.fontname ,...
                                     'FontSize', H.fontsize ,...
                                     'Tag','next' ,...
                                     'parent',H.navigationPanel,...
                                     'BackgroundColor', [0.5 0.5 0.5]);  
        
        H.activeControlTags = [ H.activeControlTags, 'next' ];                         
        H.prev = uicontrol('style', 'pushbutton' ,...
                                     'String', 'Back' ,...
                                     'Units','normalized',...
                                     'position', getButtonPositionRightA() ,...
                                     'FontName', H.fontname ,...
                                     'FontSize', H.fontsize ,...
                                     'Parent',H.navigationPanel,...
                                     'Tag','prev' ,...
                                     'BackgroundColor', [0.5 0.5 0.5]);  
                                 
        H.activeControlTags = [ H.activeControlTags, 'prev' ];
        
        H.activeAnswerControl = H.buttonGroup;
        H.activeQuestionId = qquestion.id;
        H.activeControlType = 'buttonGroup';
        
        set(H.next, 'callback', {@showNextQuestion});
        set(H.prev, 'callback', {@showPrevQuestion});
        set(H.tutorial, 'callback', {@jumpToTutorial});
        
        if (not(isempty(qquestion.images)))
            displayImages(qquestion.images);
        end
        H.mostRecentQuestionnairePage = qquestion.id; 
    end

    function displayInputQuestion(qquestion)
        deleteObsoleteControls();
        
        createTypedInputQAPanels();
        titleString = sprintf('Character :  %s', H.characterName);
        H.characterNameText = getCharacterNameTitle(titleString);
        
        H.questionText = uicontrol('style', 'text' ,...
                                     'String', qquestion.text ,...
                                     'Units','normalized',...
                                     'position', [0,0,1,1] ,...
                                     'FontName', H.fontname ,...
                                     'FontSize', H.fontsize ,...
                                     'BackgroundColor', [1 1 1] ,...
                                     'Tag','questionText' ,...
                                     'Parent',H.questionPanel,...
                                     'HorizontalAlignment', 'left');
        
        
        H.inputText = uicontrol('style', 'edit' ,...
                                     'Parent',H.answerPanel,...
                                     'Units','normalized',...
                                     'position', getInputAnswerPosition() ,...
                                     'FontName', H.fontname ,...
                                     'FontSize', H.fontsize ,...
                                     'Tag','input' ,...
                                     'Background',[1 1 1],...
                                     'HorizontalAlignment', 'left');%'BackgroundColor', [1 0.1 0.1] ,...
        
        H.tutorial = uicontrol('style', 'pushbutton' ,...
                                     'String', 'Tutorial' ,...
                                     'Parent',H.navigationPanel,...
                                     'Units','normalized',...
                                     'position', [0,0,0.15,1],...
                                     'FontName', H.fontname ,...
                                     'FontSize', H.fontsize ,...
                                     'Tag','tutorial' ,...
                                     'BackgroundColor', [0.5 0.5 0.5]);  
                                 
        H.next = uicontrol('style', 'pushbutton' ,...
                                     'String', 'Next' ,...
                                     'Parent',H.navigationPanel,...
                                     'Units','normalized',...
                                     'position', getButtonPositionRightB(),...
                                     'FontName', H.fontname ,...
                                     'FontSize', H.fontsize ,...
                                     'Tag','next' ,...
                                     'BackgroundColor', [0.5 0.5 0.5]);  
        
        H.activeControlTags = [ H.activeControlTags, 'next' ];                     
        H.prev = uicontrol('style', 'pushbutton' ,...
                                     'String', 'Back' ,...
                                     'Parent',H.navigationPanel,...
                                     'Units','normalized',...
                                     'position', getButtonPositionRightA() ,...
                                     'FontName', H.fontname ,...
                                     'FontSize', H.fontsize ,...
                                     'Tag','prev' ,...
                                     'BackgroundColor', [0.5 0.5 0.5]);  
                                 
        H.activeControlTags = { 'titleText', 'questionText',  'input', 'next', 'prev', 'tutorial' };   
        
        H.activeAnswerControl = H.inputText;
        H.activeQuestionId = qquestion.id;
        H.activeControlType = 'edit';
        
        set(H.next, 'callback', {@showNextQuestion});
        set(H.prev, 'callback', {@showPrevQuestion});
        set(H.tutorial, 'callback', {@jumpToTutorial});
        
        if (not(isempty(qquestion.images)))
            displayImages(qquestion.images);
        end
        H.mostRecentQuestionnairePage = qquestion.id; 
    end

    %
    % sequential navigation logic
    %
    
    function showWelcomeScreen(hObject, eventData)
        displayWelcomeScreen();
    end

    function showCurrentTutorialPage(hObject, eventData)
        infoPage = H.infoPageSequencer.getCurrentInfoPage();
        displayTutorialPage(infoPage);
    end
    
    function showTutorialGoalPage(hObject, eventData)
        displayTutorialGoalPage();
    end
    function showNextTutorialPage(hObject, eventData)
        % we've already started the tutorial, check to see if we can
        % move forward
        infoPage = H.infoPageSequencer.getCurrentInfoPage();
        if (strcmp(infoPage.next,'NO_MORE_PAGES'))
            displayFinishedTutorialScreen();
        else
            H.infoPageSequencer.moveToNextPage();
            infoPage = H.infoPageSequencer.getCurrentInfoPage();
            displayTutorialPage(infoPage);
        end
    end

    function showPrevTutorialPage(hObject, eventData)
        if (strcmp(H.activeScreen,'SummaryScreen'))
            % we're backing up from the TutorialDone screen - just
            % show the currently referenced page
            infoPage = H.infoPageSequencer.getCurrentInfoPage();
            displayTutorialPage(infoPage);
        elseif (H.infoPageSequencer.canBackUp())
            H.infoPageSequencer.backUp();
            infoPage = H.infoPageSequencer.getCurrentInfoPage();
            displayTutorialPage(infoPage);
        else
            displayTutorialGoalPage();
        end
    end

    %
    % jumping between tutorial and questionnaire
    %
    
    function jumpToTutorial(hObject, eventData)
        if (strcmp(H.mostRecentTutorialPage,'NOT_STARTED'))
            showTutorialGoalPage(hObject, eventData);
        elseif (strcmp(H.mostRecentTutorialPage,'TUTORIAL_GOAL'))
            showTutorialGoalPage(hObject, eventData);
        elseif (strcmp(H.mostRecentTutorialPage,'TUTORIAL_COMPLETE'))
            H.infoPageSequencer.reset();
            showTutorialGoalPage(hObject, eventData);
        else
            showCurrentTutorialPage(hObject, eventData);
        end
    end

    function jumpToQuestionnaire(hObject, eventData)
        if (strcmp(H.mostRecentQuestionnairePage,'NOT_STARTED'))
           displayCharacterQuestion(hObject, eventData);
        elseif (strcmp(H.mostRecentQuestionnairePage,'QUESTIONNAIRE_COMPLETE'))
            doAnotherCharacter(hObject, eventData);
        elseif (strcmp(H.mostRecentQuestionnairePage,'CHARACTER_QUESTION'))
            displayCharacterQuestion(hObject, eventData);
        else
            showCurrentQuestion(hObject, eventData);
        end
    end
    
    %
    % image display
    %

    function displaySingleImage(images)
        image1Path = images(1).imageFilePath;
        axes1Panel = uipanel('Parent',H.imagePanel,...
                             'Tag','image1panel' ,...
                             'position',[0,0,1,1]);
        axes1 = axes('Parent',axes1Panel,...
                             'Color',[1,1,1],...
                             'FontName', H.fontname ,...
                             'FontSize', H.fontsize ,...
                             'Tag','image1' ,...
                             'position',[0.02,0.2,0.96,0.76]);%[0.02,0.02,0.96,0.96]
        H.activeControlTags = [ H.activeControlTags, 'image1panel' ];
        imshow(image1Path);
        xlabel(images(1).imageCaption);
    end

    function displayImagePair(images)
        image1Path = images(1).imageFilePath;
        axes1Panel = uipanel('Parent',H.imagePanel,...
                             'Tag','image1panel' ,...
                             'position',[0,0,0.5,1]);
        axes1 = axes('Parent',axes1Panel,...
                             'Color',[1,1,1],...
                             'FontName', H.fontname ,...
                             'FontSize', H.fontsize ,...
                             'Tag','image1' ,...
                             'position',[0.02,0.02,0.96,0.96]);
        H.activeControlTags = [ H.activeControlTags, 'image1panel' ];
        imshow(image1Path);
        xlabel(images(1).imageCaption);
        image2Path = images(2).imageFilePath;
        axes2Panel = uipanel('Parent',H.imagePanel,...
                             'Tag','image2panel' ,...
                             'position',[0.5,0,0.5,1]);
        axes2 = axes('Parent',axes2Panel,...
                             'Color',[1,1,1],...
                             'FontName', H.fontname ,...
                             'FontSize', H.fontsize ,...
                             'Tag','image2' ,...
                             'position',[0.02,0.02,0.96,0.96]);
        H.activeControlTags = [ H.activeControlTags, 'image2panel' ];
        imshow(image2Path);
        xlabel(images(2).imageCaption);
    end

    function displayImages(images)
        imageCount = length(images);
        if (imageCount == 1)
           displaySingleImage(images);
        elseif (imageCount == 2)
            displayImagePair(images);
        end
    end



    %
    %  NAVIGATION
    %

    function backFromEndMessageScreen(hObject, eventData)
        deleteObsoleteControls();
        if (strcmp(H.mostRecentQAFlavor,'typedInput'))
            createTypedInputQAPanels();
        else
            createChoiceQAPanels();
        end
        
        showPrevQuestion(hObject, eventData);
    end

    function doAnotherCharacter(hObject, eventData)
        H.questionSequencer.persist();
        xmlFile = QuestionsXMLFile(H.questionnaireXML);
        qquestions = QQuestions(xmlFile.domNode);
        H.questionSequencer = QuestionSequencer(qquestions);
        deleteObsoleteControls();
        createTypedInputQAPanels();
        displayCharacterQuestion();
    end

    function saveAndExit(hObject, eventData)
        
        H.questionSequencer.persist();
        close();
    end

    function exit(hObject, eventData)
        close();
    end





    function answerToNextQuestion = registerDisplayedAnswer()
        answerToNextQuestion = 'NOT_YET_SPECIFIED';
        try
            if strcmp(H.activeQuestionId,'characterQuestion')
                H.characterName = get(H.activeAnswerControl, 'String');
                H.questionSequencer.characterName = H.characterName;
                if (not(isempty(H.questionSequencer.answeredQuestions)))
                    qanswer = H.questionSequencer.answeredQuestions(1);
                    answerToNextQuestion = qanswer.answer;
                end
            else 
                if strcmp(H.activeControlType,'edit')
                    answer = get(H.activeAnswerControl, 'String');
                    answerToNextQuestion = H.questionSequencer.answerQuestion(answer);
                else
                    % must be choice
                    radioButton = get(H.buttonGroup,'SelectedObject');
                    answer = get(radioButton,'String');
                    answerToNextQuestion = H.questionSequencer.answerQuestion(answer);
                end
            end
        catch exception
            warndlg(exception.message);
            answerToNextQuestion = 'ANSWER_BLOCKED_BY_ERROR';
        end
    end

    function showPrevQuestion(hObject, eventData)
        if H.questionSequencer.canBackUp()
            prevAnsweredQuestion = H.questionSequencer.backUp();
            prevAnswer = prevAnsweredQuestion.answer;
            qquestion = H.questionSequencer.getCurrentQuestion();
            displayAppropriateQuestion(qquestion);
            displayPriorSetAnswer(prevAnswer,qquestion);
        else
            displayCharacterQuestion();
            control = findobj('Tag','characterNameInputText');
            set(control,'String',H.questionSequencer.characterName);
        end
        
    end

    function displayPriorSetAnswer(prevAnswer, qquestion)
        
        if strcmp(qquestion.type,'input_integer')
            control = findobj('Tag','input');
            set(control,'String',prevAnswer);
        elseif strcmp(qquestion.type,'input_string')
            control = findobj('Tag','input');
            set(control,'String',prevAnswer);
        else
            % must be 'choice'
            % for some reason findobj doesn't work for these radio buttons,
            % perhaps as they are inside a button group.  Looking in the
            % button group didn't work either
            choiceTag = sprintf('radioButton%s',prevAnswer);
            %radioButton = findobj(buttonGroup,'Tag',choiceTag);
            % so use this workaround:
            handles = guihandles();
            goodRB = getfield(handles, choiceTag);
            set(goodRB,'Value',1);
        end
    end

    function displayAppropriateQuestion(qquestion)
        if (strcmp(qquestion.type,'choice'))
            displayChoiceQuestion(qquestion);
        elseif (strcmp(qquestion.type,'input_integer'))
            displayInputQuestion(qquestion);
        elseif (strcmp(qquestion.type,'input_string'))
            displayInputQuestion(qquestion);
        else
            msg = sprintf('Invalid question type: %s', qquestion.type);
            err = MException('UI:BadQuestionType', msg);
            throw(err)
        end
    end

    function showNextQuestion(hObject, eventData)
        
        if verifyAnswerPresent()
            nextAnswer = registerDisplayedAnswer();
            if (strcmp(nextAnswer,'ANSWER_BLOCKED_BY_ERROR'))
                % stay on same question
            else 
                qquestion = H.questionSequencer.getCurrentQuestion();
                if (strcmp(qquestion.id,'NO_MORE_QUESTIONS'))
                    displayQuestionnaireCompleteScreen();
                else
                    displayAppropriateQuestion(qquestion);
                    if (strcmp(nextAnswer,'NOT_YET_SPECIFIED'))
                        % no answer to apply
                    else
                        % apply the previous answer
                        displayPriorSetAnswer(nextAnswer, qquestion);
                    end
                end
            end
        else
            errordlg('Please answer the question before clicking "Next"')
        end
    end

    function showCurrentQuestion(hObject, eventData)
        qquestion = H.questionSequencer.getCurrentQuestion();
        if (strcmp(qquestion.id,'NO_MORE_QUESTIONS'))
            displayQuestionnaireCompleteScreen();
        else
            displayAppropriateQuestion(qquestion);
        end
    end

    function result = verifyAnswerPresent()
        
        result = 1;
        if (strcmp(H.activeControlType,'edit'))
            answer = get(H.activeAnswerControl, 'String');
            if (strcmp(answer,''))
                result = 0;
            end
        else % must be 'choice'
            answer = get(H.activeAnswerControl,'SelectedObject');
            if (isempty(answer))
                result = 0;
            end
        end
    end

end
   
















