classdef QuestionnaireScreens < handle
    %QUESTIONNAIRE Summary of this class goes here
    %   Detailed explanation goes here
    
    properties
        questionnaireXML;
        questionsXmlFile;
        questionSequencer;
        buttonGroup;
        ui;
        session;
    end
    
    methods
        function obj = QuestionnaireScreens(ui, session)
            obj.ui = ui;
            obj.session = session;
            if ispc
                obj.questionnaireXML = 'data\\questionnaire\\Questionnaire.xml';
            else
                obj.questionnaireXML = 'data/questionnaire/Questionnaire.xml';
            end
    
            obj.reset();
            qv = QuestionsValidator();
            qv.validate(obj.questionSequencer.qquestions.questions);
        end
        
        function reset(obj)
            obj.questionsXmlFile = QuestionsXMLFile(obj.questionnaireXML);
            qquestions = QQuestions(obj.questionsXmlFile.domNode);
            obj.questionSequencer = QuestionSequencer(qquestions);
        end
        function displayChoiceQuestion(obj,qquestion)
            % Create the button group.
            obj.ui.deleteObsoleteControls();
            obj.ui.createChoiceQAPanels();

            titleString = sprintf('Character :  %s',obj.session.characterChoiceScreen.characterName);
            characterNameText = obj.ui.getCharacterNameTitle(titleString);

            obj.buttonGroup = uibuttongroup('Visible','off',...
                                        'Tag','buttonGroup',...
                                        'BorderType','none',...
                                        'Background','white',...
                                        'Parent',obj.ui.answerPanel,...
                                        'Position',[0 0 1 1]);


            obj.ui.activeControlTags = { 'buttonGroup', 'titleText' };    

            questionText = uicontrol('style', 'text' ,...
                                         'String', qquestion.text ,...
                                         'Units','normalized',...
                                         'position', [0,0,1,1] ,...
                                         'FontName', obj.ui.fontname ,...
                                         'FontSize', obj.ui.fontsize ,...
                                         'BackgroundColor', [1 1 1] ,...
                                         'Tag','questionText' ,...
                                         'Parent',obj.ui.questionPanel,...
                                         'HorizontalAlignment', 'left');
            obj.ui.activeControlTags = [ obj.ui.activeControlTags,  'questionText' ];   

            % Create radio buttons in the button group.       

            for i=1:length(qquestion.answers)
                answerValue = qquestion.answers(i).value;
                tag = sprintf('radioButton%s',answerValue);
                thisButton = uicontrol('Style','radiobutton',...
                                'visible', 'on',...
                                'String',answerValue ,...
                                'Background', 'white' ,...
                                'Position',obj.ui.getChoiceAnswerPosition(i-1),...
                                'parent',obj.buttonGroup,...
                                'FontName', obj.ui.fontname ,...
                                'FontSize', obj.ui.fontsize ,...
                                'Tag', tag,...
                                'HandleVisibility', 'off');
                % buttons not found for deletion, presumably because Button
                % group gets deleted forst, so, don't bother to remember here
                % for later deletion.
                %H.activeControlTags = [ H.activeControlTags, tag ]; 
            end


            set(obj.buttonGroup,'SelectedObject',[]);  % No selection
            set(obj.buttonGroup,'Visible','on');

            tutorial = uicontrol('style', 'pushbutton' ,...
                                         'String', 'Tutorial' ,...
                                         'Parent',obj.ui.navigationPanel,...
                                         'Units','normalized',...
                                         'position', [0,0,0.15,1],...
                                         'FontName', obj.ui.fontname ,...
                                         'FontSize', obj.ui.fontsize ,...
                                         'Tag','tutorial' ,...
                                         'BackgroundColor', [0.8 0.8 0.8]);  
            obj.ui.activeControlTags = [ obj.ui.activeControlTags, 'tutorial' ];                              
            next = uicontrol('style', 'pushbutton' ,...
                                         'String', 'Next' ,...
                                         'Units','normalized',...
                                         'position', obj.ui.getButtonPositionRightB() ,...
                                         'FontName', obj.ui.fontname ,...
                                         'FontSize', obj.ui.fontsize ,...
                                         'Tag','next' ,...
                                         'parent',obj.ui.navigationPanel,...
                                         'BackgroundColor', [0.8 0.8 0.8]);  

            obj.ui.activeControlTags = [ obj.ui.activeControlTags, 'next' ];                         
            prev = uicontrol('style', 'pushbutton' ,...
                                         'String', 'Back' ,...
                                         'Units','normalized',...
                                         'position', obj.ui.getButtonPositionRightA() ,...
                                         'FontName', obj.ui.fontname ,...
                                         'FontSize', obj.ui.fontsize ,...
                                         'Parent',obj.ui.navigationPanel,...
                                         'Tag','prev' ,...
                                         'BackgroundColor', [0.8 0.8 0.8]);  

            obj.ui.activeControlTags = [ obj.ui.activeControlTags, 'prev' ];

            obj.ui.activeAnswerControl = obj.buttonGroup;
            obj.session.activeQuestionId = qquestion.id;
            obj.ui.activeControlType = 'buttonGroup';

            set(next, 'callback', {@obj.showNextQuestion});
            set(prev, 'callback', {@obj.showPrevQuestion});
            set(tutorial, 'callback', {@obj.jumpToTutorial});

            if (not(isempty(qquestion.images)))
                obj.ui.displayImages(qquestion.images);
            end
            obj.session.mostRecentScreen = qquestion.id; 
        end
        
        

        function displayInputQuestion(obj,qquestion)
            obj.ui.deleteObsoleteControls();
            obj.ui.createTypedInputQAPanels();
            titleString = sprintf('Character :  %s', obj.session.characterChoiceScreen.characterName);
            characterNameText = obj.ui.getCharacterNameTitle(titleString);

            questionText = uicontrol('style', 'text' ,...
                                         'String', qquestion.text ,...
                                         'Units','normalized',...
                                         'position', [0,0,1,1] ,...
                                         'FontName', obj.ui.fontname ,...
                                         'FontSize', obj.ui.fontsize ,...
                                         'BackgroundColor', [1 1 1] ,...
                                         'Tag','questionText' ,...
                                         'Parent',obj.ui.questionPanel,...
                                         'HorizontalAlignment', 'left');


            inputText = uicontrol('style', 'edit' ,...
                                         'Parent',obj.ui.answerPanel,...
                                         'Units','normalized',...
                                         'position', obj.ui.getInputAnswerPosition() ,...
                                         'FontName', obj.ui.fontname ,...
                                         'FontSize', obj.ui.fontsize ,...
                                         'Tag','input' ,...
                                         'Background',[1 1 1],...
                                         'HorizontalAlignment', 'left');%'BackgroundColor', [1 0.1 0.1] ,...

            tutorial = uicontrol('style', 'pushbutton' ,...
                                         'String', 'Tutorial' ,...
                                         'Parent',obj.ui.navigationPanel,...
                                         'Units','normalized',...
                                         'position', [0,0,0.15,1],...
                                         'FontName', obj.ui.fontname ,...
                                         'FontSize', obj.ui.fontsize ,...
                                         'Tag','tutorial' ,...
                                         'BackgroundColor', [0.8 0.8 0.8]);  

            next = uicontrol('style', 'pushbutton' ,...
                                         'String', 'Next' ,...
                                         'Parent',obj.ui.navigationPanel,...
                                         'Units','normalized',...
                                         'position', obj.ui.getButtonPositionRightB(),...
                                         'FontName', obj.ui.fontname ,...
                                         'FontSize', obj.ui.fontsize ,...
                                         'Tag','next' ,...
                                         'BackgroundColor', [0.8 0.8 0.8]);  
                  
            prev = uicontrol('style', 'pushbutton' ,...
                                         'String', 'Back' ,...
                                         'Parent',obj.ui.navigationPanel,...
                                         'Units','normalized',...
                                         'position', obj.ui.getButtonPositionRightA() ,...
                                         'FontName', obj.ui.fontname ,...
                                         'FontSize', obj.ui.fontsize ,...
                                         'Tag','prev' ,...
                                         'BackgroundColor', [0.8 0.8 0.8]);  

            obj.ui.activeControlTags = { 'titleText', 'questionText',  'input', 'next', 'prev', 'tutorial' };   

            obj.ui.activeAnswerControl = inputText;
            obj.session.activeQuestionId = qquestion.id;
            obj.ui.activeControlType = 'edit';

            set(next, 'callback', {@obj.showNextQuestion});
            set(prev, 'callback', {@obj.showPrevQuestion});
            set(tutorial, 'callback', {@obj.jumpToTutorial});

            if (not(isempty(qquestion.images)))
                displayImages(qquestion.images);
            end
            obj.session.mostRecentScreen = qquestion.id; 
        end

        function showNextQuestion(obj, prevAnswer, qquestion)
            obj.session.showNextQuestion();
        end
 
        function showPrevQuestion(obj, prevAnswer, qquestion)
            obj.session.showPrevQuestion();
        end
 
        function jumpToTutorial(obj, prevAnswer, qquestion)
            obj.session.jumpToTutorial();
        end
        function displayPriorSetAnswer(obj, prevAnswer, qquestion)
            if strcmp(qquestion.type,'input_integer')
                control = findobj('Tag','input');
                set(control,'String',prevAnswer);
            elseif strcmp(qquestion.type,'input_string')
                control = findobj('Tag','input');
                set(control,'String',prevAnswer);
            else
                % must be 'choice'
                % for some reason findobj doesn't work for these radio buttons,
                % perhaps as they are inside a button group.  Looking in the
                % button group didn't work either
                choiceTag = sprintf('radioButton%s',prevAnswer);
                %radioButton = findobj(buttonGroup,'Tag',choiceTag);
                % so use this workaround:
                handles = guihandles();
                goodRB = getfield(handles, choiceTag);
                set(goodRB,'Value',1);
            end
        end

        function displayAppropriateQuestion(obj,qquestion)
            if (strcmp(qquestion.type,'choice'))
                obj.displayChoiceQuestion(qquestion);
            elseif (strcmp(qquestion.type,'input_integer'))
                obj.displayInputQuestion(qquestion);
            elseif (strcmp(qquestion.type,'input_string'))
                obj.displayInputQuestion(qquestion);
            else
                msg = sprintf('Invalid question type: %s', qquestion.type);
                err = MException('UI:BadQuestionType', msg);
                throw(err)
            end
        end

       

        function showNextQuestionSequencerQuestion(obj,nextAnswer)
            qquestion = obj.questionSequencer.getCurrentQuestion();
            if (strcmp(qquestion.id,'NO_MORE_QUESTIONS'))
                obj.session.doneWithQuestionnaire();
            else
                obj.displayAppropriateQuestion(qquestion);
                if (strcmp(nextAnswer,'NOT_YET_SPECIFIED'))
                    % no answer to apply
                else
                    % apply the previous answer
                    obj.displayPriorSetAnswer(nextAnswer, qquestion);
                end
            end
        end


        function showCurrentQuestion(obj)
            qquestion = obj.questionSequencer.getCurrentQuestion();
            if (strcmp(qquestion.id,'NO_MORE_QUESTIONS'))
                obj.session.doneWithQuestionnaire();
            else
                obj.displayAppropriateQuestion(qquestion);
            end
        end


    end
    
end

