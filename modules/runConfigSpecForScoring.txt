At SCORING step, I will pass one argument, which is the path to the runConfigScoring.txt file

AvatolCV knows to generate these lines:

    trainingDataDir=<dirWithTrainingData> // see below *
    scoringOutputDir=<someOutputDir> // where to put output

  
    
AvatolCV generates these two lines and the associated files due to inputRequired lines in algProperties file:   
    testImagesFile=<somepath1> // the file referenced lists the full pathnames of files that are the cropped orig ones
    testImagesMaskFile=<somepath2> // the file referenced lists the full pathnames of files that are the masks
    
AvatolCV generates these two lines and the associated files due to dependency lines in algProperties file:
    pathLibSsvmMatlab=<modulesPath>/3rdParty/libsvm/libsvm-318/matlab
    pathVlfeat=<modulesPath>/3rdParty/vlfeat/vlfeat-0.9.20/toolbox/v1_setup
    
    
* dirWithTrainingData contains one or more files that contain training data information:
    
    
    training_<scoringConcernType>_<scoringConcernID>_<scoringConcernName>.txt   // scoring concern info is in the filename
    
        imageDir=<someDir>
		scoringConcernType=<someType>
		scoringConcernID=<someID>
		scoringConcernName=<someName>
        
        (optional) trainingTestConcernName=<someName>  ___add trainingTestValue (optional) somehow
        #imageName,scoringConcernValue,pointCoordinates
        <image1Name>,<scoringConcernValue>,<pointCoords>
        <image2Name>,<scoringConcernValue>,<pointCoords>
        ...
    
if there are no pointCoordinates in play, the file will look like
    
        imageDir=<someDir>
		scoringConcernType=<someType>
		scoringConcernID=<someID>
		scoringConcernName=<someName>
        #imageName,scoringConcernValue,pointCoordinates
        <image1Name>,<scoringConcernValue>,
        <image2Name>,<scoringConcernValue>,
        ...
    
if there is no scoringConcernType, then the filename will look like:   training__<scoringConcernID>_<scoringConcernName>.txt (note consec undercores)
    